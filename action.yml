name: 'Better Discord Notification'
author: 'Retr0-01'
description: 'A GitHub action for sending a better Discord notification embed, which can also be customized.'
inputs:
  webhook-url:
    description: 'The Discord webhook URL this notification will be send to.'
    required: true
  embed-color:
    description: "The embed's color."
    require: false
    default: '0'
  footer-icon:
    description: 'A small icon to put on the footer. Required in order to show the commit message count.'
    required: false
    default: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
  ignore-hidden:
    description: 'Branches that contain the phase `hidden/` in them will be ignored.'
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:
    - name: Process Commits
      # What we do here:
      #   - Get and seperate all commit messages with a newline.
      #   - If the commit message are too big, cut it down.
      #   - Get how many commits we have through their unique commit ID.
      #   - Check if we have an actual commit push and not something else (e.g. branch push).
      #   - Check if our current branch is marked as hidden and the user wants to hide hidden branches.
      #   - Set all needed job outputs.
      id: process_commits
      run: |
        COMMIT_IDS="${{ join(github.event.commits.*.id, ', ') }}"
        IFS=', ' read -r -a COMMITS_ARRAY <<< "$COMMIT_IDS"
        COMMITS_COUNT="${#COMMITS_ARRAY[@]}"
        COMMIT_MESSAGE="${{ join(github.event.commits.*.message, '\n') }}"

        if $COMMITS_COUNT == "0" || ${{ contains(github.ref_name, 'hidden/') }} && ${{ inputs.ignore-hidden }} == true; then
          SHOULD_CONTINUE='false'
        else
          SHOULD_CONTINUE='true'
        fi

        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" | sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' >> $GITHUB_OUTPUT
        echo "COMMITS_COUNT=$COMMITS_COUNT" >> $GITHUB_OUTPUT
        echo "SHOULD_CONTINUE=$SHOULD_CONTINUE" >> $GITHUB_OUTPUT
      shell: bash
    - name: Get Current Time
      if: steps.process_commits.outputs.SHOULD_CONTINUE == 'true'
      uses: josStorer/get-current-time@master
      id: get_time
    - name: Get User Avatar
      if: steps.process_commits.outputs.SHOULD_CONTINUE == 'true'
      uses: fjogeleit/http-request-action@master
      id: get_avatar
      with:
        url: "https://api.github.com/users/${{ github.actor }}"
        method: "GET"
    - name: Send Notification
      if: steps.process_commits.outputs.SHOULD_CONTINUE == 'true'
      uses: fjogeleit/http-request-action@master
      with:
        url: ${{ inputs.webhook-url }}
        method: 'POST'
        data: '{"content":null,"embeds":[{"title":"${{github.repository}} [${{github.ref_name}}]","description":"${{steps.process_commits.outputs.COMMIT_MESSAGE}}","url":"${{github.event.compare}}","color":${{inputs.embed-color}},"footer":{"text":"${{steps.process_commits.outputs.COMMITS_COUNT}} new commit(s)","icon_url":"${{inputs.footer-icon}}"},"timestamp":"${{steps.get_time.outputs.time}}"}],"username":"${{github.actor}}","avatar_url":"${{fromJson(steps.get_avatar.outputs.response).avatar_url}}"}'
branding:
  icon: 'bell'
  color: 'blue'
